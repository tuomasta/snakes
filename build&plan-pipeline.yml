# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
# - master
- 'Manual'

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: BuildAndPush
  displayName: Build and push images
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'DockerHub - Tuomas'
        repository: 'talustuo/snakes-server'
        command: 'buildAndPush'
        Dockerfile: 'server/Dockerfile'
        buildContext: '.'
        tags: |
          $(tag)
    - task: Docker@2
      inputs:
        containerRegistry: 'DockerHub - Tuomas'
        repository: 'talustuo/snakes-client'
        command: 'buildAndPush'
        Dockerfile: 'client/Dockerfile'
        buildContext: '.'
        tags: |
          $(tag)
    - task: Docker@2
      inputs:
        containerRegistry: 'DockerHub - Tuomas'
        repository: 'talustuo/snakes-executor'
        command: 'buildAndPush'
        Dockerfile: 'executor/Dockerfile'
        buildContext: '.'
        tags: |
          $(tag)
- stage: Plan
  displayName: Plan
  jobs:
    - job: Plan
      displayName: Runs TF init & plan
      pool:
        vmImage: ubuntu-latest
      variables:
        - group: TFServicePrincipal
      steps:
        - checkout: self
          fetchDepth: 1
        - script: |
            set -e
            terraform init -lockfile=readonly -backend-config="resource_group_name=$TF_RG_NAME" -backend-config="storage_account_name=$TF_STORAGE_NAME"
            terraform plan -var ssh_public_key_file=./snakes.pub -out tf.plan
            tar -czf tf-artifact.tar.gz .terraform tf.plan .terraform.lock.hcl
          env:
            TF_RG_NAME: tuomas-general
            TF_STORAGE_NAME: tuomascommonstorage
            ARM_TENANT_ID: $(TENANT_ID)
            ARM_SUBSCRIPTION_ID: $(SUBSCIRPTION_ID)
            ARM_CLIENT_ID: $(PRINCIPAL_ID)
            ARM_CLIENT_SECRET: $(PRINCIPAL_SECRET)
          name: RunTerraform
          displayName: Run terraform plan and init
        - publish: $(System.DefaultWorkingDirectory)/tf-artifact.tar.gz
          artifact: tf
# terraform apply -auto-approve tf.plan

          


      